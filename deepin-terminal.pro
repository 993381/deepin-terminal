######################################################################
# Automatically generated by qmake (3.1) Thu Dec 19 17:06:22 2019
######################################################################
QT += core gui dtkwidget dtkgui dtkcore dbus

greaterThan(QT_MAJOR_VERSION, 4) {
  QT += widgets widgets-private
  greaterThan(QT_MAJOR_VERSION, 5)|greaterThan(QT_MINOR_VERSION, 7): QT += gui-private
}

TEMPLATE = app
TARGET = deepin-terminal
INCLUDEPATH += .
LIBS += -L../deepin-terminal/qtermwidget/build/ -lqtermwidget5

# The following define makes your compiler warn you if you use any
# feature of Qt which has been marked as deprecated (the exact warnings
# depend on your compiler). Please consult the documentation of the
# deprecated API in order to know how to port your code away from it.
DEFINES += QT_DEPRECATED_WARNINGS
DEFINES += USE_QMAKE

# You can also make your code fail to compile if you use deprecated APIs.
# In order to do so, uncomment the following line.
# You can also select to disable deprecated APIs only up to a certain version of Qt.
#DEFINES += QT_DISABLE_DEPRECATED_BEFORE=0x060000    # disables all the APIs deprecated before Qt 6.0.0

# Input
HEADERS += \
    customcommanddelegate.h \
    customcommanditemmodel.h \
    define.h \
    mainwindow.h \
    mainwindowplugininterface.h \
    rightpanel.h \
    settings.h \
    shortcutmanager.h \
    tabbar.h \
    termproperties.h \
    termwidget.h \
    termwidgetpage.h \
    themeitemdelegate.h \
    themelistmodel.h \
    themelistview.h \
    themepanel.h \
    themepanelplugin.h \
    titlebar.h \
    customcommandplugin.h \
    customcommandpanel.h \
    customcommandlist.h \
    customcommandoptdlg.h \
    customcommanditem.h \
    myiconbutton.h \
    customcommandsearchrstpanel.h \
    commonpanel.h \
    customcommandtoppanel.h \
    operationconfirmdlg.h \
    serverconfigmanager.h \
    remotemanagementplugn.h \
    remotemanagementtoppanel.h \
    remotemanagementpanel.h \
    serverconfigitem.h \
    serverconfiglist.h \
    serverconfiggrouppanel.h \
    remotemanagementsearchpanel.h \
    serverconfigoptwidget.h \
    serverconfigoptdlg.h \
    termtabbar.h \
    quaketerminaladapter.h \
    termargumentparser.h \
    quaketerminalproxy.h \
    utils.h \
    pagesearchbar.h

SOURCES += \
    customcommanddelegate.cpp \
    customcommanditemmodel.cpp \
    main.cpp \
    mainwindow.cpp \
    rightpanel.cpp \
    settings.cpp \
    settings_translation.cpp \
    shortcutmanager.cpp \
    tabbar.cpp \
    termproperties.cpp \
    termwidget.cpp \
    termwidgetpage.cpp \
    themeitemdelegate.cpp \
    themelistmodel.cpp \
    themelistview.cpp \
    themepanel.cpp \
    themepanelplugin.cpp \
    titlebar.cpp \
    customcommandplugin.cpp \
    customcommandpanel.cpp \
    customcommandlist.cpp \
    customcommandoptdlg.cpp \
    customcommanditem.cpp \
    myiconbutton.cpp \
    customcommandsearchrstpanel.cpp \
    commonpanel.cpp \
    customcommandtoppanel.cpp \
    operationconfirmdlg.cpp \
    serverconfigmanager.cpp \
    remotemanagementplugn.cpp \
    remotemanagementtoppanel.cpp \
    remotemanagementpanel.cpp \
    serverconfigitem.cpp \
    serverconfiglist.cpp \
    serverconfiggrouppanel.cpp \
    remotemanagementsearchpanel.cpp \
    serverconfigoptwidget.cpp \
    serverconfigoptdlg.cpp \
    termtabbar.cpp \
    quaketerminaladapter.cpp \
    termargumentparser.cpp \
    quaketerminalproxy.cpp \
    utils.cpp \
    pagesearchbar.cpp

RESOURCES += resources.qrc
TRANSLATIONS += translations/dterm.ts translations/dterm_zh_CN.ts

DISTFILES += \
translations/dterm.ts \
translations/dterm_zh_CN.ts \
qtermwidget/* \
qtermwidget/lib/* \
qtermwidget/lib/translations/* \
qtermwidget/lib/kb-layouts/* \
qtermwidget/lib/kb-layouts/historic/* \
qtermwidget/lib/color-schemes/*

!system($$PWD/build_qtermwidget.sh)

# Automating generation .qm files from .ts files
!system($$PWD/translate_generation.sh): error("Failed to generate translation")

isEmpty(BINDIR):BINDIR=/usr/bin
isEmpty(APPDIR):APPDIR=/usr/share/applications
isEmpty(DSRDIR):DSRDIR=/usr/share/deepin-terminal

target.path = $$INSTROOT$$BINDIR
desktop.path = $$INSTROOT$$APPDIR
desktop.files = $$PWD/deepin-terminal.desktop

translations.path = /usr/share/deepin-terminal/translations
translations.files = $$PWD/translations/*.qm

icon_files.path = /usr/share/icons/hicolor/scalable/apps
icon_files.files = $$PWD/resources/images/logo/deepin-terminal.svg

INSTALLS += target desktop translations icon_files

CONFIG(release, debug|release) {
    TRANSLATIONS = $$files($$PWD/translations/*.ts)
    for(tsfile, TRANSLATIONS) {
        qmfile = $$replace(tsfile, .ts$, .qm)
        system(lrelease $$tsfile -qm $$qmfile) | error("Failed to lrelease")
    }
    dtk_translations.path = /usr/share/$$TARGET/translations
    dtk_translations.files = $$PWD/translations/*.qm
    INSTALLS += dtk_translations
}
